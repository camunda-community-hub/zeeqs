type ProcessInstance {
    # the unique key of the process instance
    key: ID!
    # the current state of the process instance
    state: ProcessInstanceState!
    # the parent element instance if the process instance is created by a call activity
    parentElementInstance: ElementInstance

    # the time when the process instance was created
    startTime(zoneId: String = "Z"): String
    # the time when the process instance was ended (completed/terminated)
    endTime(zoneId: String = "Z"): String

    # the process the instance is created of
    process: Process
    # the created variables related to the process instance
    variables(
        # If true, it returns only the global variables of the process instance.
        # If false, it includes the local variables from the containing scopes.
        globalOnly: Boolean = false
    ): [Variable!]
    # the created jobs related to the process instance
    jobs(
        stateIn: [JobState!] = [ACTIVATABLE, FAILED, COMPLETED, CANCELED, ERROR_THROWN]
        jobTypeIn: [String!] = []
    ): [Job!]
    # the created user tasks related to the process instance
    userTasks(
        perPage: Int = 10,
        page: Int = 0,
        stateIn: [UserTaskState!] = [CREATED, COMPLETED, CANCELED]
    ): UserTaskConnection
    # the created incidents related to the process instance
    incidents(
        stateIn: [IncidentState] = [CREATED, RESOLVED]
    ): [Incident!]
    # the child process instances that are created by a call activity of this process instance
    childProcessInstances: [ProcessInstance!]
    # the created element instances (e.g. for start event, service task, etc.) of the process instance
    elementInstances(
        stateIn: [ElementInstanceState] = [ACTIVATING, ACTIVATED, COMPLETING, COMPLETED, TERMINATING, TERMINATED, TAKEN]
    ): [ElementInstance!]
    # the scheduled timers related to the process instance (timer catch events)
    timers: [Timer!]
    # the opened message subscriptions related to the process instance (e.g. message catch events)
    messageSubscriptions: [MessageSubscription!]
    # The evaluated decisions that are called by a business rule task of this process instance.
    decisionEvaluations(
        perPage: Int = 10,
        page: Int = 0,
        stateIn: [DecisionEvaluationState!] = [EVALUATED, FAILED]
    ): DecisionEvaluationConnection
    # the occurred error related to the process instance
    error: Error
}

enum ProcessInstanceState {
    ACTIVATED
    COMPLETED
    TERMINATED
}

type ProcessInstanceConnection {
    totalCount: Int!
    nodes: [ProcessInstance!]!
}

type Query {
    # find the process instance with the given key
    processInstance(key: ID!): ProcessInstance

    # find all process instances
    processInstances(
        perPage: Int = 10,
        page: Int = 0,
        stateIn: [ProcessInstanceState!] = [ACTIVATED, COMPLETED, TERMINATED],
        variablesFilter: VariableFilterGroup = null
    ): ProcessInstanceConnection!

}

type Subscription {
    # Subscribe to updates of process instances (e.g. process instance created, variable set, job completed).
    processInstanceUpdates(
        # Limit the updates by the given filter.
        filter: ProcessInstanceUpdateFilter = null): ProcessInstanceUpdate!
}

# A filter to limit the process instance updates.
input ProcessInstanceUpdateFilter {
    # Limit the updates to instances of the given process.
    processKey: ID
    # Limit the updates to the given process instance.
    processInstanceKey: ID
    # Limit the updates to the given types.
    updateTypeIn: [ProcessInstanceUpdateType!]
}

# An update of a process instance.
type ProcessInstanceUpdate {
    # The updated process instance.
    processInstance: ProcessInstance
    # The type of the update.
    updateType: ProcessInstanceUpdateType!
}

# The type of a process instance update.
enum ProcessInstanceUpdateType {
    PROCESS_INSTANCE_STATE
    ELEMENT_INSTANCE
    VARIABLE
    INCIDENT
    JOB
}
