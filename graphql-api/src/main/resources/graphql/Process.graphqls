type Process {
    # the unique key of the process
    key: ID!
    # the BPMN process id (i.e. the technical name of the process)
    bpmnProcessId: String!
    # the deployed version of the process based on the BPMN process id
    version: Int!
    # the time when the process was deployed
    deployTime(zoneId: String = "Z"): String!
    # the BPMN XML of the process
    bpmnXML: String!
    # the created instances of the process
    processInstances(
        perPage: Int = 10,
        page: Int = 0,
        stateIn: [ProcessInstanceState!] = [ACTIVATED, COMPLETED, TERMINATED]
        variablesFilter: VariableFilterGroup = null): ProcessInstanceConnection!
    # the scheduled timers of the timer start events of the process
    timers: [Timer!]
    # the opened message subscriptions of the message start events of the process
    messageSubscriptions: [MessageSubscription!]
    # The subscriptions of the signal start events of the process.
    signalSubscriptions: [SignalSubscription!]
    # all BPMN elements of the process
    elements(
        # Filter the BPMN elements by the given types. If empty, return all elements.
        elementTypeIn: [BpmnElementType!] = []
    ): [BpmnElement!]
    # BPMN element of the process by its id
    element(elementId: String): BpmnElement
}

type ProcessConnection {
    totalCount: Int!
    nodes: [Process!]!
}

extend type Query {
    # find the process with the given key
    process(key: ID!): Process
    # find all processes
    processes(
        perPage: Int = 10,
        page: Int = 0,): ProcessConnection!
}

extend type Subscription {
    # Subscribe to updates of processes (i.e. new process deployed).
    processUpdates: Process!
}
