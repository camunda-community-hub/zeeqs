type ElementInstance {
    key: ID!

    elementId: String!
    @deprecated(reason: "Extracted into BpmnElement. Use `element.elementId` instead.")

    elementName: String
    @deprecated(reason: "Extracted into BpmnElement. Use `element.elementName` instead.")

    bpmnElementType: BpmnElementType!
    @deprecated(reason: "Extracted into BpmnElement. Use `element.bpmnElementType` instead.")

    state: ElementInstanceState!

    processInstance: ProcessInstance

    scope: ElementInstance

    startTime(zoneId: String = "Z"): String
    endTime(zoneId: String = "Z"): String

    stateTransitions: [ElementInstanceStateTransition]

    incidents: [Incident!]

    timers: [Timer!]

    messageSubscriptions: [MessageSubscription!]

    element: BpmnElement!
}

type ElementInstanceStateTransition {
    state: ElementInstanceState!
    timestamp(zoneId: String = "Z"): String
}

enum ElementInstanceState {
    ACTIVATING
    ACTIVATED

    COMPLETING
    COMPLETED

    TERMINATING
    TERMINATED

    TAKEN
}

