type ElementInstance {
    key: ID!

    elementId: String!
    elementName: String

    bpmnElementType: BpmnElementType!

    state: ElementInstanceState!

    processInstance: ProcessInstance

    scope: ElementInstance

    startTime(zoneId: String = "Z"): String
    endTime(zoneId: String = "Z"): String

    stateTransitions: [ElementInstanceStateTransition]

    incidents: [Incident!]

    timers: [Timer!]

    messageSubscriptions: [MessageSubscription!]
}

type ElementInstanceStateTransition {
    state: ElementInstanceState!
    timestamp(zoneId: String = "Z"): String
}

enum ElementInstanceState {
    ACTIVATING
    ACTIVATED

    COMPLETING
    COMPLETED

    TERMINATING
    TERMINATED

    TAKEN
}

enum BpmnElementType {
    UNSPECIFIED
    PROCESS
    SUB_PROCESS
    EVENT_SUB_PROCESS
    START_EVENT
    INTERMEDIATE_CATCH_EVENT
    BOUNDARY_EVENT
    END_EVENT
    SERVICE_TASK
    RECEIVE_TASK
    EXCLUSIVE_GATEWAY
    PARALLEL_GATEWAY
    EVENT_BASED_GATEWAY
    SEQUENCE_FLOW
    MULTI_INSTANCE_BODY
    CALL_ACTIVITY
}

